<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.review">

	<!-- 검색 조건 -->
	<sql id="searchMySQL">
		<if test="searchType != null">
			<if test="searchType == 's'.toString()">
				AND review_subject LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				AND review_content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'u'.toString()">
				AND userID LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</if>
	</sql>	
	
	<!-- 상품 코드가 있을 때 -->
	<sql id="productCode">
		<if test="product_code != null">
			WHERE product_code = #{product_code}
		</if>
	</sql>	

	<!-- 리뷰 등록하기 -->
	<insert id="insertReview" parameterType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
			INSERT INTO t_review (review_bno, userID, product_code, review_subject, review_content, review_date, review_star)
			SELECT	IFNULL(MAX(review_bno), 0) + 1, #{userID}, #{product_code}, #{review_subject}, #{review_content}, now(), #{review_star} FROM t_review
		]]>
	</insert>
	
	<!-- 상품 코드에 해당하는 상품의 별점 관련 항목 수정하기 -->
	<update id="updateStar" parameterType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
		UPDATE t_product 
		SET review_count = review_count + 1, star_sum = star_sum + #{review_star}
		WHERE product_code = #{product_code};
		]]>
	</update>	
	
	<!-- 상품 코드에 해당하는 상품의 평균 별점 항목 수정하기 -->
	<update id="updateStarAvg" parameterType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
		UPDATE t_product 
		SET star_avg = ROUND(star_sum / review_count, 1)
		WHERE product_code = #{product_code};
		]]>
	</update>
	
	<!-- 주문완료 상품 테이블에서 리뷰 유무 상태 업데이트 -->
	<update id="updateReviewYN" parameterType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
		UPDATE t_orderProduct 
		SET review_yn = 'Y'
		WHERE product_code = #{product_code} and userID = #{userID} and order_num = #{order_num};
		]]>
	</update>
			
	<!-- 상품 코드에 해당하는 리뷰 목록 가져오기 + paging -->
	<select id="reviewProductList" parameterType="com.edu.common.util.ReviewCriteria" resultType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
		SELECT *
		FROM (
		SELECT review_bno, userID, product_code, review_subject, review_content, review_date, review_star, ROW_NUMBER() OVER(ORDER BY review_bno DESC) AS rNUM
		FROM t_review WHERE product_code = #{product_code}
		) brd
		WHERE rNUM BETWEEN (#{perPageNum} * #{page} - 11) and (#{perPageNum} * #{page})
		ORDER BY review_bno DESC;
		]]>
	</select>
	
	<!-- 게시글 총 갯수 가져오기 -->
	<select id="totalCount" parameterType="com.edu.common.util.ReviewCriteria" resultType="Integer">
		<![CDATA[
			SELECT COUNT(*) FROM t_review
		]]>
		<include refid="productCode"/>
	</select>		
	
	<!-- 리뷰 전체목록 가져오기 + paging -->
	<select id="reviewList" parameterType="com.edu.common.util.ReviewCriteria" resultType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
			SELECT *
			FROM (
			SELECT review_bno, userID, product_code, review_subject, review_content, review_date, review_star, ROW_NUMBER() OVER(ORDER BY review_bno DESC) AS rNUM
			FROM t_review 
			]]>
			<include refid="productCode"/>
			<include refid="searchMySQL"/>
			<![CDATA[
			) brd
			WHERE rNUM BETWEEN (#{perPageNum} * #{page} - 11) and (#{perPageNum} * #{page})
			ORDER BY review_bno DESC;
		]]>
	</select>
	
	<!-- 해당 아이디 리뷰 전체목록 가져오기 -->
	<select id="reviewUserList" parameterType="String" resultType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
			SELECT *
			FROM t_review
			WHERE userID = #{userID}
			ORDER BY review_date DESC;
		]]>
	</select>

	<!-- 리뷰 삭제하기 -->
	<delete id="reviewDelete" parameterType="int">
		<![CDATA[
			DELETE 	FROM	t_review
			WHERE	review_bno = #{review_bno}
		]]>
	</delete>
	
	<!-- 리뷰 전체목록 가져오기 -->
	<select id="reviewTotalList" resultType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
			SELECT * FROM t_review ORDER BY review_date DESC;
		]]>
	</select>	
	
	<!-- 회원 아이디 + 상품코드에 해당하는 리뷰 객체 가져오기 -->
	<select id="getReviewDTO" parameterType="com.edu.product.dto.OrderDTO" resultType="com.edu.board.dto.ReviewDTO">
		<![CDATA[
			SELECT * FROM t_review WHERE product_code = #{product_code} and userID = #{userID};
		]]>
	</select>		
</mapper>